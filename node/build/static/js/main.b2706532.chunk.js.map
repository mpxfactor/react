{"version":3,"sources":["components/Notes.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","Notification","message","notesToShow","filter","map","find","n","changeNote","returnedNote","catch","error","setTimeout","toggleImportanceof","onSubmit","event","preventDefault","console","log","target","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","type","ReactDOM","render","document","getElementById"],"mappings":"0KAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBACA,iBACJ,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCPpCK,EAAU,aAqBD,EAnBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiB5B,EAfA,SAAAC,GAEX,OADgBL,IAAMM,KAAMP,EAASM,GACtBH,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SAa/B,EAVA,SAACG,EAAIF,GAEhB,OADiBL,IAAMQ,IAAN,UAAcT,EAAd,YAAyBQ,GAAMF,GACjCH,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SCqG/BK,EAhHH,SAACC,GAEX,MAA0BC,mBAAU,IAApC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAU,IAAxC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAU,GAAxC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,0BAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAW,WACTC,IAEGnB,MAAM,SAAAoB,GACLT,EAAUS,QAEb,IAEH,IA8CMC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAK5B,UAAU,QAAf,SACG4B,KAMDC,EAAcT,EAChBJ,EACAA,EAAMc,QAAO,SAAAlC,GAAI,OAAIA,EAAKG,aAE9B,OACE,gCACE,uCAEA,cAAC4B,EAAD,CAAcC,QAASN,IAEvB,8BACE,yBAAQpB,QAAS,kBAAMmB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAIlC,6BACGS,EAAYE,KAAK,SAAAnC,GAAI,OAClB,cAAC,EAAD,CAEEA,KAAOA,EACPC,iBAAoB,kBAhFL,SAACc,GAC1B,IAAMf,EAAOoB,EAAMgB,MAAM,SAAAC,GAAC,OAAIA,EAAEtB,KAAOA,KACjCuB,EAAU,2BAAOtC,GAAP,IAAaG,WAAWH,EAAKG,YAE7C0B,EACWd,EAAIuB,GACZ5B,MAAM,SAAA6B,GACLlB,EAASD,EAAMe,KAAI,SAAAnC,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAOuC,SAEtDC,OAAO,SAAAC,GACNd,EAAgB,SAAD,OACJ3B,EAAKK,QADD,sCAGfqC,YAAW,WACTf,EAAgB,QACf,KACHN,EAAUD,EAAMc,QAAQ,SAAAG,GAAC,OAAIA,EAAEtB,KAAOA,SAgEJ4B,CAAoB3C,EAAKe,MAF9Cf,EAAKe,SAMlB,6BACE,uBAAM6B,SAjEI,SAACC,GACbA,EAAMC,iBACNC,QAAQC,IAAI,iBAAkBH,EAAMI,QAEpC,IAAMC,EAAa,CACjB7C,QAAUiB,EACV6B,MAAO,IAAIC,MAAOC,cAClBlD,UAAYmD,KAAKC,SAAW,IAG9B1B,EACWqB,GACRxC,MAAM,SAAA6B,GACLlB,EAASD,EAAMoC,OAAQjB,IACvBhB,EAAY,QAmDd,UACE,uBACEkC,MAAOnC,EACPoC,SAjDe,SAACb,GACxBE,QAAQC,IAAIH,EAAMI,OAAOQ,OACzBlC,EAAYsB,EAAMI,OAAOQ,UAiDnB,wBAAQE,KAAK,SAAb,2B,MCzGVC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b2706532.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important'\n    : 'make important'\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import axios from 'axios'\n\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\nconst create = newObject => {\n    const request = axios.post (baseUrl, newObject)\n    return request.then (response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request =  axios.put (`${baseUrl}/${id}`, newObject )\n    return request.then (response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default {getAll, create, update, remove}","import React, {useState, useEffect} from 'react'\nimport Note from './components/Notes'\nimport noteService from './services/notes'\n\nconst App = (props) => {\n\n  const [notes, setNotes] = useState ([])\n  const [newNote, setNewNote] = useState ('')\n  const [showAll, setShowAll] = useState (true)\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n  useEffect (() => {\n    noteService\n      .getAll ()    \n      .then (initialNotes => {\n        setNotes (initialNotes)\n      })\n  }, [])\n\n  const toggleImportanceof = (id) => {\n    const note = notes.find (n => n.id === id)\n    const changeNote = {...note, important:!note.important}\n\n    noteService\n      .update (id, changeNote)\n      .then (returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch (error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes (notes.filter (n => n.id !== id))\n    })\n    }\n\n  const addNote = (event) => {\n      event.preventDefault()\n      console.log(\"button Clicked\", event.target)\n\n      const noteObject = {\n        content : newNote,\n        date : new Date().toISOString(),\n        important : Math.random() < 0.5,\n      }\n\n      noteService\n        .create (noteObject)\n        .then (returnedNote => {\n          setNotes(notes.concat (returnedNote))\n          setNewNote ('')\n        })\n\n    }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote (event.target.value)\n  }\n\n\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n\n      <ul>\n        {notesToShow.map (note => \n            <Note \n              key={note.id}  \n              note= {note}\n              toggleImportance = {() => toggleImportanceof (note.id)} \n              />\n          )}\n      </ul>\n      <ul>\n        <form onSubmit={addNote}>\n          <input \n            value={newNote}\n            onChange={handleNoteChange}  \n          />\n          <button type=\"submit\">save</button>\n        </form>\n      </ul>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root'))\n\n"],"sourceRoot":""}